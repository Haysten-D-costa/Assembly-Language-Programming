; ASSEMBLY LANGUAGE PROGRAM TO PRINT HELLO WORLD...

section .data
        msg db "Hello World ! Using NASM", 10, 30 ; msg - variable name...
                            ; db  - define bytes (each word in string is a byte)...
                            ; 0xa / 13, 10 - newline character...                
        msgL equ $ -msg     ; msgl equals $ (-msg) - gives the no. of bytes...
        
section .text         ; to tell kernel the start of execution of program...
        global _start ; keyword...

_start:               ; tells the linker the main entry point...
        MOV EDX, msgL ; length of the message is moved to EDX...
        MOV ECX, msg  ; message is moved to ECX ...
        MOV EBX, 1    
        MOV EAX, 4    ; system call (sys_write)...       
        INT 80H       ; calls kernel...
        
        MOV EBX, 0
        MOV EAX, 1
        INT 80H
